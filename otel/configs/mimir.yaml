# Do not use this configuration in production.
# It is for demonstration purposes only.
# Run Mimir in single process mode, with all components running in 1 process. 
target: all,alertmanager,overrides-exporter

ingester:
  ring:
    replication_factor: 1

limits:
  max_global_exemplars_per_user: 1000

# Configure Mimir to use Minio as its object storage backend. 
blocks_storage:
  backend: s3
  s3:
    endpoint: minio:9000
    bucket_name: mimir-blocks
    access_key_id: minio
    secret_access_key: 12345678
    insecure: true
  tsdb:
    dir: /data/ingester

# Use memberlist, a gossip-based protocol, to enable the 3 Mimir replicas to communicate 
memberlist:
  join_members: 
    - mimir

ruler:
  rule_path: /data/ruler
  alertmanager_url: http://localhost:8080/alertmanager
  ring:
    # Quickly detect unhealthy rulers to speed up the tutorial.
    heartbeat_period: 2s
    heartbeat_timeout: 10s

ruler_storage:
  backend: s3
  s3:
    endpoint: minio:9000
    bucket_name: mimir-ruler
    access_key_id: minio
    secret_access_key: 12345678
    insecure: true

alertmanager_storage:
  backend: s3
  s3:
    endpoint: minio:9000
    bucket_name: mimir-alertmanager
    access_key_id: minio
    secret_access_key: 12345678
    insecure: true

server:
  log_level: debug

frontend:
  parallelize_shardable_queries: true


