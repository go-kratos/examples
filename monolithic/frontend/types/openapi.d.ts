/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/admin/v1/dict:details": {
    /** @description 查询字典详情列表 */
    get: operations["DictDetailService_ListDictDetail"];
    /** @description 创建字典详情 */
    post: operations["DictDetailService_CreateDictDetail"];
  };
  "/admin/v1/dict:details/{detail.id}": {
    /** @description 更新字典详情 */
    put: operations["DictDetailService_UpdateDictDetail"];
  };
  "/admin/v1/dict:details/{id}": {
    /** @description 查询字典详情 */
    get: operations["DictDetailService_GetDictDetail"];
    /** @description 删除字典详情 */
    delete: operations["DictDetailService_DeleteDictDetail"];
  };
  "/admin/v1/dicts": {
    /** @description 查询字典列表 */
    get: operations["DictService_ListDict"];
    /** @description 创建字典 */
    post: operations["DictService_CreateDict"];
  };
  "/admin/v1/dicts/{dict.id}": {
    /** @description 更新字典 */
    put: operations["DictService_UpdateDict"];
  };
  "/admin/v1/dicts/{id}": {
    /** @description 查询字典 */
    get: operations["DictService_GetDict"];
    /** @description 删除字典 */
    delete: operations["DictService_DeleteDict"];
  };
  "/admin/v1/login": {
    /** @description 登陆 */
    post: operations["AuthenticationService_Login"];
  };
  "/admin/v1/logout": {
    /** @description 登出 */
    post: operations["AuthenticationService_Logout"];
  };
  "/admin/v1/me": {
    /** @description 后台获取已经登陆的用户的数据 */
    get: operations["AuthenticationService_GetMe"];
  };
  "/admin/v1/menus": {
    /** @description 查询菜单列表 */
    get: operations["MenuService_ListMenu"];
    /** @description 创建菜单 */
    post: operations["MenuService_CreateMenu"];
  };
  "/admin/v1/menus/{id}": {
    /** @description 查询菜单详情 */
    get: operations["MenuService_GetMenu"];
    /** @description 删除菜单 */
    delete: operations["MenuService_DeleteMenu"];
  };
  "/admin/v1/menus/{menu.id}": {
    /** @description 更新菜单 */
    put: operations["MenuService_UpdateMenu"];
  };
  "/admin/v1/orgs": {
    /** @description 查询部门列表 */
    get: operations["OrganizationService_ListOrganization"];
    /** @description 创建部门 */
    post: operations["OrganizationService_CreateOrganization"];
  };
  "/admin/v1/orgs/{id}": {
    /** @description 查询部门详情 */
    get: operations["OrganizationService_GetOrganization"];
    /** @description 删除部门 */
    delete: operations["OrganizationService_DeleteOrganization"];
  };
  "/admin/v1/orgs/{org.id}": {
    /** @description 更新部门 */
    put: operations["OrganizationService_UpdateOrganization"];
  };
  "/admin/v1/perm-codes": {
    /** @description 查询权限码列表 */
    get: operations["RouterService_ListPermissionCode"];
  };
  "/admin/v1/positions": {
    /** @description 查询职位列表 */
    get: operations["PositionService_ListPosition"];
    /** @description 创建职位 */
    post: operations["PositionService_CreatePosition"];
  };
  "/admin/v1/positions/{id}": {
    /** @description 查询职位详情 */
    get: operations["PositionService_GetPosition"];
    /** @description 删除职位 */
    delete: operations["PositionService_DeletePosition"];
  };
  "/admin/v1/positions/{position.id}": {
    /** @description 更新职位 */
    put: operations["PositionService_UpdatePosition"];
  };
  "/admin/v1/refresh_token": {
    /** @description 刷新认证令牌 */
    post: operations["AuthenticationService_RefreshToken"];
  };
  "/admin/v1/roles": {
    /** @description 查询角色列表 */
    get: operations["RoleService_ListRole"];
    /** @description 创建角色 */
    post: operations["RoleService_CreateRole"];
  };
  "/admin/v1/roles/{id}": {
    /** @description 查询角色详情 */
    get: operations["RoleService_GetRole"];
    /** @description 删除角色 */
    delete: operations["RoleService_DeleteRole"];
  };
  "/admin/v1/roles/{role.id}": {
    /** @description 更新角色 */
    put: operations["RoleService_UpdateRole"];
  };
  "/admin/v1/routes": {
    /** @description 查询路由列表 */
    get: operations["RouterService_ListRoute"];
  };
  "/admin/v1/users": {
    /** @description 获取用户列表 */
    get: operations["UserService_ListUser"];
    /** @description 创建用户 */
    post: operations["UserService_CreateUser"];
  };
  "/admin/v1/users/{id}": {
    /** @description 获取用户数据 */
    get: operations["UserService_GetUser"];
    /** @description 删除用户 */
    delete: operations["UserService_DeleteUser"];
  };
  "/admin/v1/users/{user.id}": {
    /** @description 更新用户 */
    put: operations["UserService_UpdateUser"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** @description 创建字典详情 - 请求 */
    CreateDictDetailRequest: {
      detail?: components["schemas"]["DictDetail"];
      /** Format: uint32 */
      operatorId?: number;
    };
    /** @description 创建字典 - 请求 */
    CreateDictRequest: {
      dict?: components["schemas"]["Dict"];
      /** Format: uint32 */
      operatorId?: number;
    };
    /** @description 创建菜单 - 请求 */
    CreateMenuRequest: {
      menu?: components["schemas"]["Menu"];
      /** Format: uint32 */
      operatorId?: number;
    };
    /** @description 创建部门 - 请求 */
    CreateOrganizationRequest: {
      /** Format: uint32 */
      operatorId?: number;
      org?: components["schemas"]["Organization"];
    };
    /** @description 创建职位 - 请求 */
    CreatePositionRequest: {
      position?: components["schemas"]["Position"];
      /** Format: uint32 */
      operatorId?: number;
    };
    /** @description 创建角色 - 请求 */
    CreateRoleRequest: {
      role?: components["schemas"]["Role"];
      /** Format: uint32 */
      operatorId?: number;
    };
    /** @description 数据字典 */
    Dict: {
      /**
       * Format: uint32
       * @description ID
       */
      id?: number;
      /** @description 字典名称 */
      name?: string;
      /** @description 描述 */
      description?: string;
      /**
       * Format: uint32
       * @description 创建者ID
       */
      creatorId?: number;
      /**
       * Format: uint32
       * @description 创建者名字
       */
      creatorName?: number;
      createTime?: string;
      updateTime?: string;
      deleteTime?: string;
    };
    /** @description 数据字典详情 */
    DictDetail: {
      /**
       * Format: uint32
       * @description 字典详情ID
       */
      id?: number;
      /**
       * Format: uint32
       * @description 字典ID
       */
      dictId?: number;
      /**
       * Format: int32
       * @description 排序号
       */
      orderNo?: number;
      /** @description 字典标签 */
      label?: string;
      /** @description 字典值 */
      value?: string;
      /**
       * Format: uint32
       * @description 创建者ID
       */
      creatorId?: number;
      /**
       * Format: uint32
       * @description 创建者名字
       */
      creatorName?: number;
      createTime?: string;
      updateTime?: string;
      deleteTime?: string;
    };
    /** @description Kratos错误返回 */
    KratosStatus: {
      /**
       * Format: int32
       * @description 错误码
       */
      code?: number;
      /** @description 错误消息 */
      message?: string;
      /** @description 错误原因 */
      reason?: string;
      /** @description 元数据 */
      metadata?: Record<string, never>;
    };
    /** @description 查询字典详情列表 - 答复 */
    ListDictDetailResponse: {
      items?: components["schemas"]["DictDetail"][];
      /** Format: int32 */
      total?: number;
    };
    /** @description 查询字典列表 - 答复 */
    ListDictResponse: {
      items?: components["schemas"]["Dict"][];
      /** Format: int32 */
      total?: number;
    };
    /** @description 查询菜单列表 - 回应 */
    ListMenuResponse: {
      items?: components["schemas"]["Menu"][];
      /** Format: int32 */
      total?: number;
    };
    /** @description 部门列表 - 答复 */
    ListOrganizationResponse: {
      items?: components["schemas"]["Organization"][];
      /** Format: int32 */
      total?: number;
    };
    /** @description 查询权限码列表 - 回应 */
    ListPermissionCodeResponse: {
      codes?: string[];
    };
    /** @description 获取职位列表 - 答复 */
    ListPositionResponse: {
      items?: components["schemas"]["Position"][];
      /** Format: int32 */
      total?: number;
    };
    /** @description 角色列表 - 答复 */
    ListRoleResponse: {
      items?: components["schemas"]["Role"][];
      /** Format: int32 */
      total?: number;
    };
    /** @description 查询路由列表 - 回应 */
    ListRouteResponse: {
      items?: components["schemas"]["RouteItem"][];
    };
    /** @description 获取用户列表 - 答复 */
    ListUserResponse: {
      items?: components["schemas"]["User"][];
      /** Format: int32 */
      total?: number;
    };
    /** @description 用户后台登陆 - 请求 */
    LoginRequest: {
      username: string;
      password: string;
      /**
       * @description 授权类型，此处的值固定为"password"，必选项。
       * @default password
       */
      grand_type: string;
      scope?: string;
    };
    /** @description 用户后台登陆 - 回应 */
    LoginResponse: {
      access_token?: string;
      refresh_token?: string;
      token_type?: string;
      expires_in?: string;
    };
    /** @description 用户后台登出 - 请求 */
    LogoutRequest: {
      /** Format: uint32 */
      id?: number;
    };
    /** @description 菜单 */
    Menu: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      parentId?: number;
      /** Format: int32 */
      orderNo?: number;
      name?: string;
      /**
       * Format: enum
       * @description 类型
       * @default FOLDER
       * @enum {string}
       */
      type?: "FOLDER" | "MENU" | "BUTTON";
      /**
       * @description 状态
       * @default ON
       * @enum {string}
       */
      status?: "ON" | "OFF";
      path?: string;
      title?: string;
      component?: string;
      icon?: string;
      permissions?: string[];
      children?: components["schemas"]["Menu"][];
      keepAlive?: boolean;
      show?: boolean;
      isExt?: boolean;
      extUrl?: string;
      hideBreadcrumb?: boolean;
      hideTab?: boolean;
      hideMenu?: boolean;
      hideChildrenInMenu?: boolean;
      hidePathForChildren?: boolean;
      currentActiveMenu?: string;
      redirect?: string;
      createTime?: string;
      updateTime?: string;
      deleteTime?: string;
    };
    /** @description 部门 */
    Organization: {
      /** Format: uint32 */
      id?: number;
      name?: string;
      /** Format: uint32 */
      parentId?: number;
      /** Format: int32 */
      orderNo?: number;
      /**
       * @description 状态
       * @default ON
       * @enum {string}
       */
      status?: "ON" | "OFF";
      remark?: string;
      children?: components["schemas"]["Organization"][];
      createTime?: string;
      updateTime?: string;
      deleteTime?: string;
    };
    /** @description 职位 */
    Position: {
      /** Format: uint32 */
      id?: number;
      name?: string;
      /** Format: uint32 */
      parentId?: number;
      /** Format: int32 */
      orderNo?: number;
      code?: string;
      /**
       * @description 状态
       * @default ON
       * @enum {string}
       */
      status?: "ON" | "OFF";
      remark?: string;
      createTime?: string;
      updateTime?: string;
      deleteTime?: string;
    };
    /** @description 用户刷新令牌 - 请求 */
    RefreshTokenRequest: {
      refresh_token: string;
      /**
       * @description 授权类型，此处的值固定为"password"，必选项。
       * @default password
       */
      grand_type: string;
      scope?: string;
    };
    /** @description 角色 */
    Role: {
      /** Format: uint32 */
      id?: number;
      name?: string;
      /** Format: uint32 */
      parentId?: number;
      /** Format: int32 */
      orderNo?: number;
      code?: string;
      /**
       * @description 状态
       * @default ON
       * @enum {string}
       */
      status?: "ON" | "OFF";
      remark?: string;
      createTime?: string;
      updateTime?: string;
      deleteTime?: string;
    };
    /** @description 路由项 */
    RouteItem: {
      name?: string;
      alias?: string;
      path?: string;
      component?: string;
      redirect?: string;
      caseSensitive?: boolean;
      meta?: components["schemas"]["RouteMeta"];
      children?: components["schemas"]["RouteItem"][];
    };
    /** @description 路由元数据 */
    RouteMeta: {
      /** Format: int32 */
      orderNo?: number;
      title?: string;
      /** Format: int32 */
      dynamicLevel?: number;
      realPath?: string;
      icon?: string;
      frameSrc?: string;
      transitionName?: string;
      affix?: boolean;
      carryParam?: boolean;
      single?: boolean;
      ignoreAuth?: boolean;
      ignoreKeepAlive?: boolean;
      ignoreRoute?: boolean;
      hideBreadcrumb?: boolean;
      hideChildrenInMenu?: boolean;
      hideTab?: boolean;
      hideMenu?: boolean;
      isLink?: boolean;
      hidePathForChildren?: boolean;
      currentActiveMenu?: string;
    };
    /** @description 用户 */
    User: {
      /** Format: uint32 */
      id?: number;
      /**
       * Format: uint32
       * @description 角色ID
       */
      roleId?: number;
      /**
       * Format: uint32
       * @description 工号
       */
      workId?: number;
      /**
       * Format: uint32
       * @description 部门ID
       */
      orgId?: number;
      /**
       * Format: uint32
       * @description 岗位ID
       */
      positionId?: number;
      /**
       * Format: uint32
       * @description 创建者ID
       */
      creatorId?: number;
      /** @description 登录名 */
      userName?: string;
      /** @description 昵称 */
      nickName?: string;
      /** @description 真实姓名 */
      realName?: string;
      /** @description 头像 */
      avatar?: string;
      /** @description 邮箱 */
      email?: string;
      /** @description 手机号 */
      phone?: string;
      /** @description 性别 */
      gender?: string;
      /** @description 住址 */
      address?: string;
      /** @description 个人描述 */
      description?: string;
      /** @description 最后登录时间 */
      lastLoginTime?: string;
      /** @description 最后登录IP */
      lastLoginIp?: string;
      /**
       * @description 用户状态
       * @default ON
       * @enum {string}
       */
      status?: "ON" | "OFF";
      /**
       * Format: enum
       * @description 权限
       * @default CUSTOMER_USER
       * @enum {string}
       */
      authority?: "SYS_ADMIN" | "CUSTOMER_USER" | "GUEST_USER" | "REFRESH_TOKEN";
      createTime?: string;
      updateTime?: string;
      deleteTime?: string;
    };
  };
  responses: {
    /** @description default kratos response */
    default: {
      content: {
        "application/json": components["schemas"]["KratosStatus"];
      };
    };
  };
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** @description 查询字典详情列表 */
  DictDetailService_ListDictDetail: {
    parameters: {
      query?: {
        /** @description 当前页码 */
        page?: number;
        /** @description 每页的行数 */
        pageSize?: number;
        /** @description 与过滤参数 */
        query?: string;
        /** @description 或过滤参数 */
        or?: string;
        /** @description 排序条件 */
        orderBy?: string[];
        /** @description 是否不分页 */
        nopaging?: boolean;
        /** @description 字段掩码 */
        fieldMask?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ListDictDetailResponse"];
        };
      };
    };
  };
  /** @description 创建字典详情 */
  DictDetailService_CreateDictDetail: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateDictDetailRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
        };
      };
    };
  };
  /** @description 更新字典详情 */
  DictDetailService_UpdateDictDetail: {
    parameters: {
      query?: {
        operatorId?: number;
      };
      path: {
        "detail.id": string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["DictDetail"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
        };
      };
    };
  };
  /** @description 查询字典详情 */
  DictDetailService_GetDictDetail: {
    parameters: {
      query?: {
        code?: string;
      };
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["DictDetail"];
        };
      };
    };
  };
  /** @description 删除字典详情 */
  DictDetailService_DeleteDictDetail: {
    parameters: {
      query?: {
        operatorId?: number;
      };
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
        };
      };
    };
  };
  /** @description 查询字典列表 */
  DictService_ListDict: {
    parameters: {
      query?: {
        /** @description 当前页码 */
        page?: number;
        /** @description 每页的行数 */
        pageSize?: number;
        /** @description 与过滤参数 */
        query?: string;
        /** @description 或过滤参数 */
        or?: string;
        /** @description 排序条件 */
        orderBy?: string[];
        /** @description 是否不分页 */
        nopaging?: boolean;
        /** @description 字段掩码 */
        fieldMask?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ListDictResponse"];
        };
      };
    };
  };
  /** @description 创建字典 */
  DictService_CreateDict: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateDictRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
        };
      };
    };
  };
  /** @description 更新字典 */
  DictService_UpdateDict: {
    parameters: {
      query?: {
        operatorId?: number;
      };
      path: {
        "dict.id": string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Dict"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
        };
      };
    };
  };
  /** @description 查询字典 */
  DictService_GetDict: {
    parameters: {
      query?: {
        name?: string;
      };
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Dict"];
        };
      };
    };
  };
  /** @description 删除字典 */
  DictService_DeleteDict: {
    parameters: {
      query?: {
        operatorId?: number;
      };
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
        };
      };
    };
  };
  /** @description 登陆 */
  AuthenticationService_Login: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["LoginRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["LoginResponse"];
        };
      };
    };
  };
  /** @description 登出 */
  AuthenticationService_Logout: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["LogoutRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
        };
      };
    };
  };
  /** @description 后台获取已经登陆的用户的数据 */
  AuthenticationService_GetMe: {
    parameters: {
      query?: {
        id?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  /** @description 查询菜单列表 */
  MenuService_ListMenu: {
    parameters: {
      query?: {
        /** @description 当前页码 */
        page?: number;
        /** @description 每页的行数 */
        pageSize?: number;
        /** @description 与过滤参数 */
        query?: string;
        /** @description 或过滤参数 */
        or?: string;
        /** @description 排序条件 */
        orderBy?: string[];
        /** @description 是否不分页 */
        nopaging?: boolean;
        /** @description 字段掩码 */
        fieldMask?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ListMenuResponse"];
        };
      };
    };
  };
  /** @description 创建菜单 */
  MenuService_CreateMenu: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateMenuRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
        };
      };
    };
  };
  /** @description 查询菜单详情 */
  MenuService_GetMenu: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Menu"];
        };
      };
    };
  };
  /** @description 删除菜单 */
  MenuService_DeleteMenu: {
    parameters: {
      query?: {
        operatorId?: number;
      };
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
        };
      };
    };
  };
  /** @description 更新菜单 */
  MenuService_UpdateMenu: {
    parameters: {
      query?: {
        operatorId?: number;
      };
      path: {
        "menu.id": string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Menu"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
        };
      };
    };
  };
  /** @description 查询部门列表 */
  OrganizationService_ListOrganization: {
    parameters: {
      query?: {
        /** @description 当前页码 */
        page?: number;
        /** @description 每页的行数 */
        pageSize?: number;
        /** @description 与过滤参数 */
        query?: string;
        /** @description 或过滤参数 */
        or?: string;
        /** @description 排序条件 */
        orderBy?: string[];
        /** @description 是否不分页 */
        nopaging?: boolean;
        /** @description 字段掩码 */
        fieldMask?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ListOrganizationResponse"];
        };
      };
    };
  };
  /** @description 创建部门 */
  OrganizationService_CreateOrganization: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateOrganizationRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
        };
      };
    };
  };
  /** @description 查询部门详情 */
  OrganizationService_GetOrganization: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Organization"];
        };
      };
    };
  };
  /** @description 删除部门 */
  OrganizationService_DeleteOrganization: {
    parameters: {
      query?: {
        operatorId?: number;
      };
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
        };
      };
    };
  };
  /** @description 更新部门 */
  OrganizationService_UpdateOrganization: {
    parameters: {
      query?: {
        operatorId?: number;
      };
      path: {
        "org.id": string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Organization"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
        };
      };
    };
  };
  /** @description 查询权限码列表 */
  RouterService_ListPermissionCode: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ListPermissionCodeResponse"];
        };
      };
    };
  };
  /** @description 查询职位列表 */
  PositionService_ListPosition: {
    parameters: {
      query?: {
        /** @description 当前页码 */
        page?: number;
        /** @description 每页的行数 */
        pageSize?: number;
        /** @description 与过滤参数 */
        query?: string;
        /** @description 或过滤参数 */
        or?: string;
        /** @description 排序条件 */
        orderBy?: string[];
        /** @description 是否不分页 */
        nopaging?: boolean;
        /** @description 字段掩码 */
        fieldMask?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ListPositionResponse"];
        };
      };
    };
  };
  /** @description 创建职位 */
  PositionService_CreatePosition: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreatePositionRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
        };
      };
    };
  };
  /** @description 查询职位详情 */
  PositionService_GetPosition: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Position"];
        };
      };
    };
  };
  /** @description 删除职位 */
  PositionService_DeletePosition: {
    parameters: {
      query?: {
        operatorId?: number;
      };
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
        };
      };
    };
  };
  /** @description 更新职位 */
  PositionService_UpdatePosition: {
    parameters: {
      query?: {
        operatorId?: number;
      };
      path: {
        "position.id": string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Position"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
        };
      };
    };
  };
  /** @description 刷新认证令牌 */
  AuthenticationService_RefreshToken: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["RefreshTokenRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["LoginResponse"];
        };
      };
    };
  };
  /** @description 查询角色列表 */
  RoleService_ListRole: {
    parameters: {
      query?: {
        /** @description 当前页码 */
        page?: number;
        /** @description 每页的行数 */
        pageSize?: number;
        /** @description 与过滤参数 */
        query?: string;
        /** @description 或过滤参数 */
        or?: string;
        /** @description 排序条件 */
        orderBy?: string[];
        /** @description 是否不分页 */
        nopaging?: boolean;
        /** @description 字段掩码 */
        fieldMask?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ListRoleResponse"];
        };
      };
    };
  };
  /** @description 创建角色 */
  RoleService_CreateRole: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateRoleRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
        };
      };
    };
  };
  /** @description 查询角色详情 */
  RoleService_GetRole: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Role"];
        };
      };
    };
  };
  /** @description 删除角色 */
  RoleService_DeleteRole: {
    parameters: {
      query?: {
        operatorId?: number;
      };
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
        };
      };
    };
  };
  /** @description 更新角色 */
  RoleService_UpdateRole: {
    parameters: {
      query?: {
        operatorId?: number;
      };
      path: {
        "role.id": string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Role"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
        };
      };
    };
  };
  /** @description 查询路由列表 */
  RouterService_ListRoute: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ListRouteResponse"];
        };
      };
    };
  };
  /** @description 获取用户列表 */
  UserService_ListUser: {
    parameters: {
      query?: {
        /** @description 当前页码 */
        page?: number;
        /** @description 每页的行数 */
        pageSize?: number;
        /** @description 与过滤参数 */
        query?: string;
        /** @description 或过滤参数 */
        or?: string;
        /** @description 排序条件 */
        orderBy?: string[];
        /** @description 是否不分页 */
        nopaging?: boolean;
        /** @description 字段掩码 */
        fieldMask?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ListUserResponse"];
        };
      };
    };
  };
  /** @description 创建用户 */
  UserService_CreateUser: {
    parameters: {
      query?: {
        operatorId?: number;
        password?: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["User"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
        };
      };
    };
  };
  /** @description 获取用户数据 */
  UserService_GetUser: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  /** @description 删除用户 */
  UserService_DeleteUser: {
    parameters: {
      query?: {
        operatorId?: number;
      };
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
        };
      };
    };
  };
  /** @description 更新用户 */
  UserService_UpdateUser: {
    parameters: {
      query?: {
        operatorId?: number;
        password?: string;
        updateMask?: string;
        allowMissing?: boolean;
      };
      path: {
        "user.id": string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["User"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
        };
      };
    };
  };
}
