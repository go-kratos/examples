syntax = "proto3";

package user.service.v1;

import "gnostic/openapi/v3/annotations.proto";
import "google/protobuf/empty.proto";

import "pagination/v1/pagination.proto";

// 部门管理服务
service OrganizationService {
  // 查询部门列表
  rpc ListOrganization (pagination.PagingRequest) returns (ListOrganizationResponse) {}

  // 查询部门详情
  rpc GetOrganization (GetOrganizationRequest) returns (Organization) {}

  // 创建部门
  rpc CreateOrganization (CreateOrganizationRequest) returns (google.protobuf.Empty) {}

  // 更新部门
  rpc UpdateOrganization (UpdateOrganizationRequest) returns (google.protobuf.Empty) {}

  // 删除部门
  rpc DeleteOrganization (DeleteOrganizationRequest) returns (google.protobuf.Empty) {}
}

// 部门
message Organization {
  uint32 id = 1;
  optional string name = 2;
  optional uint32 parentId = 3;
  optional int32 orderNo = 4;
  optional string status = 5 [(gnostic.openapi.v3.property) = {
    description: "状态"
    default: {string: "ON"}
    enum: [{yaml: "ON"}, {yaml: "OFF"}]
  }];
  optional string remark = 6;
  repeated Organization children = 7;

  optional string createTime = 20;// 创建时间
  optional string updateTime = 21;// 更新时间
  optional string deleteTime = 22;// 删除时间
}
// 部门列表 - 答复
message ListOrganizationResponse {
  repeated Organization items = 1;
  int32 total = 2;
}

// 部门数据 - 请求
message GetOrganizationRequest {
  uint32 id = 1;
}

// 创建部门 - 请求
message CreateOrganizationRequest {
  optional uint32 operatorId = 1 [json_name = "operatorId"];
  Organization org = 2;
}

// 更新部门 - 请求
message UpdateOrganizationRequest {
  optional uint32 operatorId = 1 [json_name = "operatorId"];
  Organization org = 2;
}

// 删除部门 - 请求
message DeleteOrganizationRequest {
  uint32 id = 1;
  optional uint32 operatorId = 2 [json_name = "operatorId"];
}
