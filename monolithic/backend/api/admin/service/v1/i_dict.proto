syntax = "proto3";

package admin.service.v1;

import "gnostic/openapi/v3/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

import "pagination/v1/pagination.proto";
import "system/service/v1/dict.proto";

// 字典服务
service DictService {
  // 查询字典列表
  rpc ListDict (pagination.PagingRequest) returns (system.service.v1.ListDictResponse) {
    option (google.api.http) = {
      get: "/admin/v1/dicts"
    };

    option(gnostic.openapi.v3.operation) = {
      security: [{additional_properties: [{name: "OAuth2PasswordBearer"; value: {}}]}]
    };
  }

  // 查询字典
  rpc GetDict (system.service.v1.GetDictRequest) returns (system.service.v1.Dict) {
    option (google.api.http) = {
      get: "/admin/v1/dicts/{id}"
    };

    option(gnostic.openapi.v3.operation) = {
      security: [{additional_properties: [{name: "OAuth2PasswordBearer"; value: {}}]}]
    };
  }

  // 创建字典
  rpc CreateDict (system.service.v1.CreateDictRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/admin/v1/dicts"
      body: "*"
    };

    option(gnostic.openapi.v3.operation) = {
      security: [{additional_properties: [{name: "OAuth2PasswordBearer"; value: {}}]}]
    };
  }

  // 更新字典
  rpc UpdateDict (system.service.v1.UpdateDictRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/admin/v1/dicts/{dict.id}"
      body: "dict"
    };

    option(gnostic.openapi.v3.operation) = {
      security: [{additional_properties: [{name: "OAuth2PasswordBearer"; value: {}}]}]
    };
  }

  // 删除字典
  rpc DeleteDict (system.service.v1.DeleteDictRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/admin/v1/dicts/{id}"
    };

    option(gnostic.openapi.v3.operation) = {
      security: [{additional_properties: [{name: "OAuth2PasswordBearer"; value: {}}]}]
    };
  }
}
