// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: admin/service/v1/i_router.proto

package servicev1

import (
	_ "github.com/google/gnostic/openapiv3"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 路由元数据
type RouteMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderNo             *int32  `protobuf:"varint,1,opt,name=order_no,json=orderNo,proto3,oneof" json:"order_no,omitempty"`
	Title               *string `protobuf:"bytes,2,opt,name=title,proto3,oneof" json:"title,omitempty"`
	DynamicLevel        *int32  `protobuf:"varint,3,opt,name=dynamicLevel,proto3,oneof" json:"dynamicLevel,omitempty"`
	RealPath            *string `protobuf:"bytes,4,opt,name=realPath,proto3,oneof" json:"realPath,omitempty"`
	Icon                *string `protobuf:"bytes,5,opt,name=icon,proto3,oneof" json:"icon,omitempty"`
	FrameSrc            *string `protobuf:"bytes,6,opt,name=frameSrc,proto3,oneof" json:"frameSrc,omitempty"`
	TransitionName      *string `protobuf:"bytes,7,opt,name=transitionName,proto3,oneof" json:"transitionName,omitempty"`
	Affix               *bool   `protobuf:"varint,8,opt,name=affix,proto3,oneof" json:"affix,omitempty"`
	CarryParam          *bool   `protobuf:"varint,9,opt,name=carryParam,proto3,oneof" json:"carryParam,omitempty"`
	Single              *bool   `protobuf:"varint,10,opt,name=single,proto3,oneof" json:"single,omitempty"`
	IgnoreAuth          *bool   `protobuf:"varint,11,opt,name=ignoreAuth,proto3,oneof" json:"ignoreAuth,omitempty"`
	IgnoreKeepAlive     *bool   `protobuf:"varint,12,opt,name=ignoreKeepAlive,proto3,oneof" json:"ignoreKeepAlive,omitempty"`
	IgnoreRoute         *bool   `protobuf:"varint,13,opt,name=ignoreRoute,proto3,oneof" json:"ignoreRoute,omitempty"`
	HideBreadcrumb      *bool   `protobuf:"varint,14,opt,name=hideBreadcrumb,proto3,oneof" json:"hideBreadcrumb,omitempty"`
	HideChildrenInMenu  *bool   `protobuf:"varint,15,opt,name=hideChildrenInMenu,proto3,oneof" json:"hideChildrenInMenu,omitempty"`
	HideTab             *bool   `protobuf:"varint,16,opt,name=hideTab,proto3,oneof" json:"hideTab,omitempty"`
	HideMenu            *bool   `protobuf:"varint,17,opt,name=hideMenu,proto3,oneof" json:"hideMenu,omitempty"`
	IsLink              *bool   `protobuf:"varint,18,opt,name=isLink,proto3,oneof" json:"isLink,omitempty"`
	HidePathForChildren *bool   `protobuf:"varint,19,opt,name=hidePathForChildren,proto3,oneof" json:"hidePathForChildren,omitempty"`
	CurrentActiveMenu   *string `protobuf:"bytes,20,opt,name=currentActiveMenu,proto3,oneof" json:"currentActiveMenu,omitempty"`
}

func (x *RouteMeta) Reset() {
	*x = RouteMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_service_v1_i_router_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RouteMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteMeta) ProtoMessage() {}

func (x *RouteMeta) ProtoReflect() protoreflect.Message {
	mi := &file_admin_service_v1_i_router_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteMeta.ProtoReflect.Descriptor instead.
func (*RouteMeta) Descriptor() ([]byte, []int) {
	return file_admin_service_v1_i_router_proto_rawDescGZIP(), []int{0}
}

func (x *RouteMeta) GetOrderNo() int32 {
	if x != nil && x.OrderNo != nil {
		return *x.OrderNo
	}
	return 0
}

func (x *RouteMeta) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *RouteMeta) GetDynamicLevel() int32 {
	if x != nil && x.DynamicLevel != nil {
		return *x.DynamicLevel
	}
	return 0
}

func (x *RouteMeta) GetRealPath() string {
	if x != nil && x.RealPath != nil {
		return *x.RealPath
	}
	return ""
}

func (x *RouteMeta) GetIcon() string {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return ""
}

func (x *RouteMeta) GetFrameSrc() string {
	if x != nil && x.FrameSrc != nil {
		return *x.FrameSrc
	}
	return ""
}

func (x *RouteMeta) GetTransitionName() string {
	if x != nil && x.TransitionName != nil {
		return *x.TransitionName
	}
	return ""
}

func (x *RouteMeta) GetAffix() bool {
	if x != nil && x.Affix != nil {
		return *x.Affix
	}
	return false
}

func (x *RouteMeta) GetCarryParam() bool {
	if x != nil && x.CarryParam != nil {
		return *x.CarryParam
	}
	return false
}

func (x *RouteMeta) GetSingle() bool {
	if x != nil && x.Single != nil {
		return *x.Single
	}
	return false
}

func (x *RouteMeta) GetIgnoreAuth() bool {
	if x != nil && x.IgnoreAuth != nil {
		return *x.IgnoreAuth
	}
	return false
}

func (x *RouteMeta) GetIgnoreKeepAlive() bool {
	if x != nil && x.IgnoreKeepAlive != nil {
		return *x.IgnoreKeepAlive
	}
	return false
}

func (x *RouteMeta) GetIgnoreRoute() bool {
	if x != nil && x.IgnoreRoute != nil {
		return *x.IgnoreRoute
	}
	return false
}

func (x *RouteMeta) GetHideBreadcrumb() bool {
	if x != nil && x.HideBreadcrumb != nil {
		return *x.HideBreadcrumb
	}
	return false
}

func (x *RouteMeta) GetHideChildrenInMenu() bool {
	if x != nil && x.HideChildrenInMenu != nil {
		return *x.HideChildrenInMenu
	}
	return false
}

func (x *RouteMeta) GetHideTab() bool {
	if x != nil && x.HideTab != nil {
		return *x.HideTab
	}
	return false
}

func (x *RouteMeta) GetHideMenu() bool {
	if x != nil && x.HideMenu != nil {
		return *x.HideMenu
	}
	return false
}

func (x *RouteMeta) GetIsLink() bool {
	if x != nil && x.IsLink != nil {
		return *x.IsLink
	}
	return false
}

func (x *RouteMeta) GetHidePathForChildren() bool {
	if x != nil && x.HidePathForChildren != nil {
		return *x.HidePathForChildren
	}
	return false
}

func (x *RouteMeta) GetCurrentActiveMenu() string {
	if x != nil && x.CurrentActiveMenu != nil {
		return *x.CurrentActiveMenu
	}
	return ""
}

// 路由项
type RouteItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          *string      `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Alias         *string      `protobuf:"bytes,2,opt,name=alias,proto3,oneof" json:"alias,omitempty"`
	Path          *string      `protobuf:"bytes,3,opt,name=path,proto3,oneof" json:"path,omitempty"`
	Component     *string      `protobuf:"bytes,4,opt,name=component,proto3,oneof" json:"component,omitempty"`
	Redirect      *string      `protobuf:"bytes,5,opt,name=redirect,proto3,oneof" json:"redirect,omitempty"`
	CaseSensitive *bool        `protobuf:"varint,6,opt,name=caseSensitive,proto3,oneof" json:"caseSensitive,omitempty"`
	Meta          *RouteMeta   `protobuf:"bytes,7,opt,name=meta,proto3,oneof" json:"meta,omitempty"`
	Children      []*RouteItem `protobuf:"bytes,8,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *RouteItem) Reset() {
	*x = RouteItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_service_v1_i_router_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RouteItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteItem) ProtoMessage() {}

func (x *RouteItem) ProtoReflect() protoreflect.Message {
	mi := &file_admin_service_v1_i_router_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteItem.ProtoReflect.Descriptor instead.
func (*RouteItem) Descriptor() ([]byte, []int) {
	return file_admin_service_v1_i_router_proto_rawDescGZIP(), []int{1}
}

func (x *RouteItem) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *RouteItem) GetAlias() string {
	if x != nil && x.Alias != nil {
		return *x.Alias
	}
	return ""
}

func (x *RouteItem) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *RouteItem) GetComponent() string {
	if x != nil && x.Component != nil {
		return *x.Component
	}
	return ""
}

func (x *RouteItem) GetRedirect() string {
	if x != nil && x.Redirect != nil {
		return *x.Redirect
	}
	return ""
}

func (x *RouteItem) GetCaseSensitive() bool {
	if x != nil && x.CaseSensitive != nil {
		return *x.CaseSensitive
	}
	return false
}

func (x *RouteItem) GetMeta() *RouteMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RouteItem) GetChildren() []*RouteItem {
	if x != nil {
		return x.Children
	}
	return nil
}

// 查询路由列表 - 回应
type ListRouteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*RouteItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListRouteResponse) Reset() {
	*x = ListRouteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_service_v1_i_router_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRouteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRouteResponse) ProtoMessage() {}

func (x *ListRouteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_service_v1_i_router_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRouteResponse.ProtoReflect.Descriptor instead.
func (*ListRouteResponse) Descriptor() ([]byte, []int) {
	return file_admin_service_v1_i_router_proto_rawDescGZIP(), []int{2}
}

func (x *ListRouteResponse) GetItems() []*RouteItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// 查询权限码列表 - 回应
type ListPermissionCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Codes []string `protobuf:"bytes,1,rep,name=codes,proto3" json:"codes,omitempty"`
}

func (x *ListPermissionCodeResponse) Reset() {
	*x = ListPermissionCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_service_v1_i_router_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPermissionCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPermissionCodeResponse) ProtoMessage() {}

func (x *ListPermissionCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_service_v1_i_router_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPermissionCodeResponse.ProtoReflect.Descriptor instead.
func (*ListPermissionCodeResponse) Descriptor() ([]byte, []int) {
	return file_admin_service_v1_i_router_proto_rawDescGZIP(), []int{3}
}

func (x *ListPermissionCodeResponse) GetCodes() []string {
	if x != nil {
		return x.Codes
	}
	return nil
}

var File_admin_service_v1_i_router_proto protoreflect.FileDescriptor

var file_admin_service_v1_i_router_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f,
	0x76, 0x31, 0x2f, 0x69, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x10, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x1a, 0x24, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x2f, 0x6f, 0x70, 0x65,
	0x6e, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa9, 0x08, 0x0a, 0x09, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x12, 0x1e, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x88,
	0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a,
	0x0c, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x0c, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x50, 0x61,
	0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c,
	0x50, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x88, 0x01, 0x01,
	0x12, 0x1f, 0x0a, 0x08, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x63, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x05, 0x52, 0x08, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x63, 0x88, 0x01,
	0x01, 0x12, 0x2b, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19,
	0x0a, 0x05, 0x61, 0x66, 0x66, 0x69, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x48, 0x07, 0x52,
	0x05, 0x61, 0x66, 0x66, 0x69, 0x78, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x63, 0x61, 0x72,
	0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x48, 0x08, 0x52,
	0x0a, 0x63, 0x61, 0x72, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x1b,
	0x0a, 0x06, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x48, 0x09,
	0x52, 0x06, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x69,
	0x67, 0x6e, 0x6f, 0x72, 0x65, 0x41, 0x75, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x0a, 0x52, 0x0a, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x41, 0x75, 0x74, 0x68, 0x88, 0x01, 0x01,
	0x12, 0x2d, 0x0a, 0x0f, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c,
	0x69, 0x76, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x48, 0x0b, 0x52, 0x0f, 0x69, 0x67, 0x6e,
	0x6f, 0x72, 0x65, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x25, 0x0a, 0x0b, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x0c, 0x52, 0x0b, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0e, 0x68, 0x69, 0x64, 0x65, 0x42, 0x72,
	0x65, 0x61, 0x64, 0x63, 0x72, 0x75, 0x6d, 0x62, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x48, 0x0d,
	0x52, 0x0e, 0x68, 0x69, 0x64, 0x65, 0x42, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72, 0x75, 0x6d, 0x62,
	0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x12, 0x68, 0x69, 0x64, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64,
	0x72, 0x65, 0x6e, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x0e, 0x52, 0x12, 0x68, 0x69, 0x64, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x49,
	0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x68, 0x69, 0x64, 0x65,
	0x54, 0x61, 0x62, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x48, 0x0f, 0x52, 0x07, 0x68, 0x69, 0x64,
	0x65, 0x54, 0x61, 0x62, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x68, 0x69, 0x64, 0x65, 0x4d,
	0x65, 0x6e, 0x75, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x48, 0x10, 0x52, 0x08, 0x68, 0x69, 0x64,
	0x65, 0x4d, 0x65, 0x6e, 0x75, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x69, 0x73, 0x4c, 0x69,
	0x6e, 0x6b, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x48, 0x11, 0x52, 0x06, 0x69, 0x73, 0x4c, 0x69,
	0x6e, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x13, 0x68, 0x69, 0x64, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x46, 0x6f, 0x72, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x12, 0x52, 0x13, 0x68, 0x69, 0x64, 0x65, 0x50, 0x61, 0x74, 0x68, 0x46, 0x6f,
	0x72, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x11,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x6e,
	0x75, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x13, 0x52, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x88, 0x01, 0x01, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x72, 0x65, 0x61, 0x6c,
	0x50, 0x61, 0x74, 0x68, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x63, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x61, 0x66, 0x66, 0x69, 0x78, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x61, 0x72, 0x72,
	0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x42, 0x12, 0x0a, 0x10, 0x5f, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x65, 0x70, 0x41,
	0x6c, 0x69, 0x76, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x68, 0x69, 0x64, 0x65, 0x42, 0x72, 0x65,
	0x61, 0x64, 0x63, 0x72, 0x75, 0x6d, 0x62, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x68, 0x69, 0x64, 0x65,
	0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x68, 0x69, 0x64, 0x65, 0x54, 0x61, 0x62, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x68,
	0x69, 0x64, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x69, 0x73, 0x4c, 0x69,
	0x6e, 0x6b, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x68, 0x69, 0x64, 0x65, 0x50, 0x61, 0x74, 0x68, 0x46,
	0x6f, 0x72, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x6e, 0x75,
	0x22, 0x88, 0x03, 0x0a, 0x09, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x02, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1f,
	0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x04, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x29, 0x0a, 0x0d, 0x63, 0x61, 0x73, 0x65, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x05, 0x52, 0x0d, 0x63, 0x61, 0x73, 0x65, 0x53, 0x65,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x48, 0x06, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x88, 0x01, 0x01,
	0x12, 0x37, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x63, 0x61, 0x73, 0x65, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69,
	0x76, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x22, 0x46, 0x0a, 0x11, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x31, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0x32, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x32, 0xad, 0x02, 0x0a, 0x0d, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x09, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x23, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0xba, 0x47, 0x1c, 0x5a, 0x1a, 0x0a, 0x18, 0x0a, 0x14, 0x4f,
	0x41, 0x75, 0x74, 0x68, 0x32, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x65, 0x61,
	0x72, 0x65, 0x72, 0x12, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x97, 0x01,
	0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2c, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3b, 0xba, 0x47, 0x1c, 0x5a,
	0x1a, 0x0a, 0x18, 0x0a, 0x14, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x12, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x16, 0x12, 0x14, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x65, 0x72,
	0x6d, 0x2d, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x42, 0xc4, 0x01, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x42, 0x0c, 0x49, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x3c, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2d, 0x6d, 0x6f, 0x6e, 0x6f, 0x6c, 0x69, 0x74,
	0x68, 0x69, 0x63, 0x2d, 0x64, 0x65, 0x6d, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2f, 0x76, 0x31, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x76, 0x31, 0xa2, 0x02,
	0x03, 0x41, 0x53, 0x58, 0xaa, 0x02, 0x10, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x10, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x5c,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1c, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x12, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x3a, 0x3a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_admin_service_v1_i_router_proto_rawDescOnce sync.Once
	file_admin_service_v1_i_router_proto_rawDescData = file_admin_service_v1_i_router_proto_rawDesc
)

func file_admin_service_v1_i_router_proto_rawDescGZIP() []byte {
	file_admin_service_v1_i_router_proto_rawDescOnce.Do(func() {
		file_admin_service_v1_i_router_proto_rawDescData = protoimpl.X.CompressGZIP(file_admin_service_v1_i_router_proto_rawDescData)
	})
	return file_admin_service_v1_i_router_proto_rawDescData
}

var file_admin_service_v1_i_router_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_admin_service_v1_i_router_proto_goTypes = []interface{}{
	(*RouteMeta)(nil),                  // 0: admin.service.v1.RouteMeta
	(*RouteItem)(nil),                  // 1: admin.service.v1.RouteItem
	(*ListRouteResponse)(nil),          // 2: admin.service.v1.ListRouteResponse
	(*ListPermissionCodeResponse)(nil), // 3: admin.service.v1.ListPermissionCodeResponse
	(*emptypb.Empty)(nil),              // 4: google.protobuf.Empty
}
var file_admin_service_v1_i_router_proto_depIdxs = []int32{
	0, // 0: admin.service.v1.RouteItem.meta:type_name -> admin.service.v1.RouteMeta
	1, // 1: admin.service.v1.RouteItem.children:type_name -> admin.service.v1.RouteItem
	1, // 2: admin.service.v1.ListRouteResponse.items:type_name -> admin.service.v1.RouteItem
	4, // 3: admin.service.v1.RouterService.ListRoute:input_type -> google.protobuf.Empty
	4, // 4: admin.service.v1.RouterService.ListPermissionCode:input_type -> google.protobuf.Empty
	2, // 5: admin.service.v1.RouterService.ListRoute:output_type -> admin.service.v1.ListRouteResponse
	3, // 6: admin.service.v1.RouterService.ListPermissionCode:output_type -> admin.service.v1.ListPermissionCodeResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_admin_service_v1_i_router_proto_init() }
func file_admin_service_v1_i_router_proto_init() {
	if File_admin_service_v1_i_router_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_admin_service_v1_i_router_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RouteMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_service_v1_i_router_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RouteItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_service_v1_i_router_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRouteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_service_v1_i_router_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPermissionCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_admin_service_v1_i_router_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_admin_service_v1_i_router_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_admin_service_v1_i_router_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_admin_service_v1_i_router_proto_goTypes,
		DependencyIndexes: file_admin_service_v1_i_router_proto_depIdxs,
		MessageInfos:      file_admin_service_v1_i_router_proto_msgTypes,
	}.Build()
	File_admin_service_v1_i_router_proto = out.File
	file_admin_service_v1_i_router_proto_rawDesc = nil
	file_admin_service_v1_i_router_proto_goTypes = nil
	file_admin_service_v1_i_router_proto_depIdxs = nil
}
